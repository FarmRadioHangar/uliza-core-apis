
==================== FINAL INTERFACE ====================
2017-08-02 07:12:22.939915 UTC

interface wreq-0.5.0.1@wreq-0.5.0.1-LabPVfSpM6c4hnlpFpxHHI:Network.Wreq.Lens.TH 8002
  interface hash: ffebbaf7a9ef22439383ac0b5d0d4fb7
  ABI hash: 5388eacbd4c05cb17602fe2174b23157
  export-list hash: 85af5237ebf7d721abb8bfa775f10dcb
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: eda06fdd67fab0e5e6eca85269dfa848
  sig of: Nothing
  used TH splices: True
  where
exports:
  Network.Wreq.Lens.TH.auth
  Network.Wreq.Lens.TH.checkResponse
  Network.Wreq.Lens.TH.cookie
  Network.Wreq.Lens.TH.cookieCreationTime
  Network.Wreq.Lens.TH.cookieDomain
  Network.Wreq.Lens.TH.cookieExpiryTime
  Network.Wreq.Lens.TH.cookieHostOnly
  Network.Wreq.Lens.TH.cookieHttpOnly
  Network.Wreq.Lens.TH.cookieLastAccessTime
  Network.Wreq.Lens.TH.cookieName
  Network.Wreq.Lens.TH.cookiePath
  Network.Wreq.Lens.TH.cookiePersistent
  Network.Wreq.Lens.TH.cookieSecureOnly
  Network.Wreq.Lens.TH.cookieValue
  Network.Wreq.Lens.TH.cookies
  Network.Wreq.Lens.TH.header
  Network.Wreq.Lens.TH.headers
  Network.Wreq.Lens.TH.linkParams
  Network.Wreq.Lens.TH.linkURL
  Network.Wreq.Lens.TH.manager
  Network.Wreq.Lens.TH.param
  Network.Wreq.Lens.TH.params
  Network.Wreq.Lens.TH.partContentType
  Network.Wreq.Lens.TH.partFilename
  Network.Wreq.Lens.TH.partGetBody
  Network.Wreq.Lens.TH.partHeaders
  Network.Wreq.Lens.TH.partName
  Network.Wreq.Lens.TH.proxy
  Network.Wreq.Lens.TH.proxyHost
  Network.Wreq.Lens.TH.proxyPort
  Network.Wreq.Lens.TH.redirects
  Network.Wreq.Lens.TH.responseBody
  Network.Wreq.Lens.TH.responseClose'
  Network.Wreq.Lens.TH.responseCookie
  Network.Wreq.Lens.TH.responseCookieJar
  Network.Wreq.Lens.TH.responseHeader
  Network.Wreq.Lens.TH.responseHeaders
  Network.Wreq.Lens.TH.responseLink
  Network.Wreq.Lens.TH.responseStatus
  Network.Wreq.Lens.TH.responseVersion
  Network.Wreq.Lens.TH.statusCode
  Network.Wreq.Lens.TH.statusMessage
  Network.HTTP.Client.MultipartFormData.Part
  Network.HTTP.Client.Types.Cookie
  Network.HTTP.Client.Types.Proxy
  Network.HTTP.Client.Types.Response
  Network.HTTP.Types.Status.Status
  Network.Wreq.Internal.Types.Link
  Network.Wreq.Internal.Types.Options
module dependencies: Network.Wreq.Internal.Lens
                     Network.Wreq.Internal.Link Network.Wreq.Internal.Types
                     Network.Wreq.Lens.Machinery Network.Wreq.Types
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-6nMo9ca9E95L1lsN6Br4XL
                      aeson-1.1.2.0@aeson-1.1.2.0-H8KqCgI8gcq2RuIUkNEZvK
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-8bUdsjh6UCE83aHCxOEHna
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      comonad-5.0.1@comonad-5.0.1-2dOTQljdUSmGwatNHkYwW3
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.2@distributive-0.5.2-KlkgfUmuqy3Z181VSjKfJ
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      free-4.12.4@free-4.12.4-JUYfwQOGje1F6ljlwhsQfP
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      kan-extensions-5.0.2@kan-extensions-5.0.2-5SVDrYVManyKLFvHkx6yaS
                      lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      profunctors-5.2@profunctors-5.2-7ONvCmXw8M9Co9mYrudYx
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.5.1@scientific-0.3.5.1-JHsAAp34Yyd8e5v3sK3O5Q
                      semigroupoids-5.2@semigroupoids-5.2-8RI6HtO1LKLE496qmzB9Po
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-abstraction-0.2.3.0@th-abstraction-0.2.3.0-IC8R8TEnxiaENlxvcI4gyL
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-8bUdsjh6UCE83aHCxOEHna:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-8bUdsjh6UCE83aHCxOEHna:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         wreq-0.5.0.1@wreq-0.5.0.1-LabPVfSpM6c4hnlpFpxHHI:Network.Wreq.Types
family instance modules: adjunctions-4.3@adjunctions-4.3-6nMo9ca9E95L1lsN6Br4XL:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-8bUdsjh6UCE83aHCxOEHna:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Fix
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         kan-extensions-5.0.2@kan-extensions-5.0.2-5SVDrYVManyKLFvHkx6yaS:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-5SVDrYVManyKLFvHkx6yaS:Data.Functor.Yoneda
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.At
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Internal.Indexed
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Reified
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Tuple
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Wrapped
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Zoom
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         profunctors-5.2@profunctors-5.2-7ONvCmXw8M9Co9mYrudYx:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-abstraction-0.2.3.0@th-abstraction-0.2.3.0-IC8R8TEnxiaENlxvcI4gyL:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Data.Function 7aca86bfbd92366def5f260e30cb2628
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString 43e99fdac51908da414a28958688da64
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal 89cda42ec946d9d6577dd41ab95d523e
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client 061b3ff266298c4df34c97386e44eded
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Cookies fb6f83dea6fdd52213a57969b424df26
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.MultipartFormData 49afb23c1315305382e601f10e7e5b94
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Types 3a50d3b18de4f434ed7bb6cc70d2d727
import  -/  http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY:Network.HTTP.Types.Header 9a165ff3162913a68c9de866b2bd192e
import  -/  http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY:Network.HTTP.Types.Status 89141eb12608ef6ae13b4ca925571920
import  -/  http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY:Network.HTTP.Types.Version 791e687c2864935167bc061c99791376
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens cd1550f6c488679db5861f401243c95b
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Fold a6b3f602a51fa41c4dbe626f595dacfa
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Iso 5a22a75c4dbe8838e134255270d66cc0
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Prism 212b0137b4ea27812d4fdaf9163356c5
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Setter 5fc5cbe426a271131fc78672bbbb12c9
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.TH ceb501bb16eff2674c704c1bf84b8841
import  -/  lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Type 91bf144cc6234fb5c3b3d44a50220bda
import  -/  mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB:Network.Mime 4e15065e64876cf6d4532a13e7e44c31
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text e8aa34be3dde178f567ae461e65c988b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.UTC a11128e40404d4167f29d45f57b1b0af
import  -/  Network.Wreq.Internal.Lens 8b2f743ebedbc5952191dda5f511e846
  exports: 76822200ab3f926b4f6b5cac27386d9a
  assoc a7dee1f464597b0f9b9de759676bedb7
  assoc2 38df4db31e857d00185d7b224fdc1801
import  -/  Network.Wreq.Internal.Link cd929394d386412722ae33dc8aed5983
  exports: 8111dd22cde71aa5c1f9c9c4671ab442
  links 2df2f65d7502bba9844abfd23e8cc837
import  -/  Network.Wreq.Internal.Types be2a7748ee40548c69ace57897e4b24b
  Auth 50562406d9132fbf375d117ee4db6c63
  Link a3f6f4b75cf9a8335ca0b73da7d17800
  Link 8a9978a9ba38dcd07aab09cb60cdcf7f
  Mgr d4d3784dc7295b2befd37701bfcfd1cc
  Options d8f5fb0769fd554ce1c2a728bcd51f5c
  Options a7ee0a275ba21a223c2335f85481728d
  ResponseChecker 4ab1c3030f304cea5569fd7c1afea7d9
import  -/  Network.Wreq.Lens.Machinery fa6dd4f309b1d3c59813f8aa74be6f5e
  exports: 3ac741299fd856a6af846bd71b5e1d87
  fieldName beb965dd9a585b189cac0039de766389
  makeLenses ad09609a53b91d4d83c826d41198789c
  toCamelCase b109cabf2f1a5f9a8a6a5d9ed105f52a
import  -/  Network.Wreq.Types 45501ef112978562b667a7bc8d34c47e
  exports: 2ef5ad95aa6d8bbdcbd0de190d19e1f4
7ed736b9bc94b1b973e513bfc22feaf5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Network.Wreq.Lens.TH.$trModule2
                   Network.Wreq.Lens.TH.$trModule1) -}
26434e153fc76951432cbcd777cdaabd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Network.Wreq.Lens.TH"#) -}
ac6101e97e3153032e5699d456449786
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "wreq-0.5.0.1-LabPVfSpM6c4hnlpFpxHHI"#) -}
d604df2c2f5a7ed43ee6e7ec1dd207fc
  auth ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options
      (GHC.Base.Maybe Network.Wreq.Internal.Types.Auth)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Network.Wreq.Internal.Types.Auth
                          -> f (GHC.Base.Maybe Network.Wreq.Internal.Types.Auth))
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Network.Wreq.Internal.Types.Auth)
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: GHC.Base.Maybe Network.Wreq.Internal.Types.Auth) ->
                    Network.Wreq.Internal.Types.Options x1 x2 y1 x4 x5 x6 x7 x8)
                   (f1 x3) }) -}
ddc41753e01492dccfc5ee755d44fee4
  checkResponse ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options
      (GHC.Base.Maybe Network.Wreq.Internal.Types.ResponseChecker)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Network.Wreq.Internal.Types.ResponseChecker
                          -> f (GHC.Base.Maybe Network.Wreq.Internal.Types.ResponseChecker))
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Network.Wreq.Internal.Types.ResponseChecker)
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: GHC.Base.Maybe
                               Network.Wreq.Internal.Types.ResponseChecker) ->
                    Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 y1)
                   (f1 x8) }) -}
8706621cfc85838c87cd1a14784ad6bb
  cookie ::
    Data.ByteString.Internal.ByteString
    -> Control.Lens.Type.Traversal'
         Network.Wreq.Internal.Types.Options
         Network.HTTP.Client.Types.Cookie
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U,U,U,U)><L,U(U(U,U),U,C(C1(U)),A,A)> -}
5ae42609003e5ae425751020ae8ffd38
  cookieCreationTime ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie Data.Time.Clock.UTC.UTCTime
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.Time.Clock.UTC.UTCTime
                          -> f Data.Time.Clock.UTC.UTCTime)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.Time.Clock.UTC.UTCTime
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.Time.Clock.UTC.UTCTime) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      x3
                      x4
                      x5
                      y1
                      x7
                      x8
                      x9
                      x10
                      x11)
                   (f1 x6) }) -}
1730c91f51363f811ea10db7e93b4df3
  cookieDomain ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie
      Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      x3
                      y1
                      x5
                      x6
                      x7
                      x8
                      x9
                      x10
                      x11)
                   (f1 x4) }) -}
a6e8094036d64ba05b18bb6b545a7753
  cookieExpiryTime ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie Data.Time.Clock.UTC.UTCTime
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.Time.Clock.UTC.UTCTime
                          -> f Data.Time.Clock.UTC.UTCTime)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.Time.Clock.UTC.UTCTime
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.Time.Clock.UTC.UTCTime) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      y1
                      x4
                      x5
                      x6
                      x7
                      x8
                      x9
                      x10
                      x11)
                   (f1 x3) }) -}
38519dfa2a0913d077ed29c3747726e6
  cookieHostOnly ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Bool -> f GHC.Types.Bool)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Bool
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: GHC.Types.Bool) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      x3
                      x4
                      x5
                      x6
                      x7
                      x8
                      y1
                      x10
                      x11)
                   (f1 x9) }) -}
0b8b0ba21e774c719fc7abef031e1c68
  cookieHttpOnly ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Bool -> f GHC.Types.Bool)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Bool
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: GHC.Types.Bool) ->
                    Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 y1)
                   (f1 x11) }) -}
e48ec9f6390ffb6247c8d8b54ef61b89
  cookieLastAccessTime ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie Data.Time.Clock.UTC.UTCTime
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.Time.Clock.UTC.UTCTime
                          -> f Data.Time.Clock.UTC.UTCTime)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.Time.Clock.UTC.UTCTime
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.Time.Clock.UTC.UTCTime) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      x3
                      x4
                      x5
                      x6
                      y1
                      x8
                      x9
                      x10
                      x11)
                   (f1 x7) }) -}
6b8b6a2dc4e94500ecd910c8d5789a05
  cookieName ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie
      Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.HTTP.Client.Types.Cookie
                      y1
                      x2
                      x3
                      x4
                      x5
                      x6
                      x7
                      x8
                      x9
                      x10
                      x11)
                   (f1 x1) }) -}
039eb578c87545502330d9de2c7bb882
  cookiePath ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie
      Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      x3
                      x4
                      y1
                      x6
                      x7
                      x8
                      x9
                      x10
                      x11)
                   (f1 x5) }) -}
e82e6e000e4dd8e9914d649d99284070
  cookiePersistent ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Bool -> f GHC.Types.Bool)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Bool
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: GHC.Types.Bool) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      x2
                      x3
                      x4
                      x5
                      x6
                      x7
                      y1
                      x9
                      x10
                      x11)
                   (f1 x8) }) -}
cdc56e009a1941a31eff3c6bc924993a
  cookieSecureOnly ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Bool -> f GHC.Types.Bool)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Bool
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: GHC.Types.Bool) ->
                    Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 y1 x11)
                   (f1 x10) }) -}
75a041652a949a3787baf69eee7fa444
  cookieValue ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Cookie
      Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.HTTP.Client.Types.Cookie) ->
                 case ds of wild { Network.HTTP.Client.Types.Cookie x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.HTTP.Client.Types.Cookie
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.HTTP.Client.Types.Cookie
                      x1
                      y1
                      x3
                      x4
                      x5
                      x6
                      x7
                      x8
                      x9
                      x10
                      x11)
                   (f1 x2) }) -}
b69126cc33d03035f4d5b4929b7c184d
  cookies ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options
      (GHC.Base.Maybe Network.HTTP.Client.Types.CookieJar)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Network.HTTP.Client.Types.CookieJar
                          -> f (GHC.Base.Maybe Network.HTTP.Client.Types.CookieJar))
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Network.HTTP.Client.Types.CookieJar)
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: GHC.Base.Maybe Network.HTTP.Client.Types.CookieJar) ->
                    Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 y1 x8)
                   (f1 x7) }) -}
802ed73cf729bf9702da17756b179843
  header ::
    Network.HTTP.Types.Header.HeaderName
    -> Control.Lens.Type.Lens'
         Network.Wreq.Internal.Types.Options
         [Data.ByteString.Internal.ByteString]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U(C(U),A)><L,C(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (dk :: Network.HTTP.Types.Header.HeaderName)
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: [Data.ByteString.Internal.ByteString]
                           -> f [Data.ByteString.Internal.ByteString]) ->
                 Network.Wreq.Lens.TH.headers
                   @ f
                   $dFunctor
                   (Network.Wreq.Internal.Lens.assoc2
                      @ Network.HTTP.Types.Header.HeaderName
                      @ Data.ByteString.Internal.ByteString
                      Network.HTTP.Client.Request.$s$fEq(,)_$s$fEqCI
                      dk
                      @ f
                      $dFunctor
                      eta)) -}
b60bb1e08e5d2b58df39549344174b52
  headers ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options
      [Network.HTTP.Types.Header.Header]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: [Network.HTTP.Types.Header.Header]
                          -> f [Network.HTTP.Types.Header.Header])
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ [Network.HTTP.Types.Header.Header]
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: [Network.HTTP.Types.Header.Header]) ->
                    Network.Wreq.Internal.Types.Options x1 x2 x3 y1 x5 x6 x7 x8)
                   (f1 x4) }) -}
72d33786dde676c7caa8231f94faf5fa
  linkParams ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Link
      [(Data.ByteString.Internal.ByteString,
        Data.ByteString.Internal.ByteString)]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: [(Data.ByteString.Internal.ByteString,
                            Data.ByteString.Internal.ByteString)]
                          -> f [(Data.ByteString.Internal.ByteString,
                                 Data.ByteString.Internal.ByteString)])
                   (ds :: Network.Wreq.Internal.Types.Link) ->
                 case ds of wild { Network.Wreq.Internal.Types.Link x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ [(Data.ByteString.Internal.ByteString,
                       Data.ByteString.Internal.ByteString)]
                   @ Network.Wreq.Internal.Types.Link
                   (\ (y1 :: [(Data.ByteString.Internal.ByteString,
                               Data.ByteString.Internal.ByteString)]) ->
                    Network.Wreq.Internal.Types.Link x1 y1)
                   (f1 x2) }) -}
6ac002cff3e0b393512d15b74f283ee5
  linkURL ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Link
      Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.Wreq.Internal.Types.Link) ->
                 case ds of wild { Network.Wreq.Internal.Types.Link x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.Wreq.Internal.Types.Link
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.Wreq.Internal.Types.Link y1 x2)
                   (f1 x1) }) -}
c1a029ae6122c83b973b1c93373fa3c4
  manager ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options Network.Wreq.Internal.Types.Mgr
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Network.Wreq.Internal.Types.Mgr
                          -> f Network.Wreq.Internal.Types.Mgr)
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Network.Wreq.Internal.Types.Mgr
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: Network.Wreq.Internal.Types.Mgr) ->
                    Network.Wreq.Internal.Types.Options y1 x2 x3 x4 x5 x6 x7 x8)
                   (f1 x1) }) -}
fc1eafb942fdddc0881b739af43b54cc
  param ::
    Data.Text.Internal.Text
    -> Control.Lens.Type.Lens'
         Network.Wreq.Internal.Types.Options [Data.Text.Internal.Text]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U(C(U),A)><L,C(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (dk :: Data.Text.Internal.Text)
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: [Data.Text.Internal.Text]
                           -> f [Data.Text.Internal.Text]) ->
                 Network.Wreq.Lens.TH.params
                   @ f
                   $dFunctor
                   (Network.Wreq.Internal.Lens.assoc2
                      @ Data.Text.Internal.Text
                      @ Data.Text.Internal.Text
                      Data.Text.$fEqText
                      dk
                      @ f
                      $dFunctor
                      eta)) -}
a6b2b0b249ae7517813e7c3d1772d850
  params ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options
      [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> f [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                    Network.Wreq.Internal.Types.Options x1 x2 x3 x4 y1 x6 x7 x8)
                   (f1 x5) }) -}
26dc687ce46ad07df434af114347b045
  partContentType ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.MultipartFormData.Part
      (GHC.Base.Maybe Network.Mime.MimeType)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Network.Mime.MimeType
                          -> f (GHC.Base.Maybe Network.Mime.MimeType))
                   (ds :: Network.HTTP.Client.MultipartFormData.Part) ->
                 case ds of wild { Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 x4 x5 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Network.Mime.MimeType)
                   @ Network.HTTP.Client.MultipartFormData.Part
                   (\ (y1 :: GHC.Base.Maybe Network.Mime.MimeType) ->
                    Network.HTTP.Client.MultipartFormData.Part x1 x2 y1 x4 x5)
                   (f1 x3) }) -}
0929cafdc9407bc568ecbc11503fdf6f
  partFilename ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.MultipartFormData.Part
      (GHC.Base.Maybe GHC.Base.String)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe GHC.Base.String
                          -> f (GHC.Base.Maybe GHC.Base.String))
                   (ds :: Network.HTTP.Client.MultipartFormData.Part) ->
                 case ds of wild { Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 x4 x5 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe GHC.Base.String)
                   @ Network.HTTP.Client.MultipartFormData.Part
                   (\ (y1 :: GHC.Base.Maybe GHC.Base.String) ->
                    Network.HTTP.Client.MultipartFormData.Part x1 y1 x3 x4 x5)
                   (f1 x2) }) -}
c6250bc5977f02b0b1028b9c0b7374ef
  partGetBody ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.MultipartFormData.Part
      (GHC.Types.IO Network.HTTP.Client.Types.RequestBody)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.IO Network.HTTP.Client.Types.RequestBody
                          -> f (GHC.Types.IO Network.HTTP.Client.Types.RequestBody))
                   (ds :: Network.HTTP.Client.MultipartFormData.Part) ->
                 case ds of wild { Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 x4 x5 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Types.IO Network.HTTP.Client.Types.RequestBody)
                   @ Network.HTTP.Client.MultipartFormData.Part
                   (\ (y1 :: GHC.Types.IO Network.HTTP.Client.Types.RequestBody) ->
                    Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 x4 y1)
                   (f1 x5) }) -}
d832bf987350b5cfeefb0e9c6694bf8c
  partHeaders ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.MultipartFormData.Part
      [Network.HTTP.Types.Header.Header]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: [Network.HTTP.Types.Header.Header]
                          -> f [Network.HTTP.Types.Header.Header])
                   (ds :: Network.HTTP.Client.MultipartFormData.Part) ->
                 case ds of wild { Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 x4 x5 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ [Network.HTTP.Types.Header.Header]
                   @ Network.HTTP.Client.MultipartFormData.Part
                   (\ (y1 :: [Network.HTTP.Types.Header.Header]) ->
                    Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 y1 x5)
                   (f1 x4) }) -}
187450813c78993a5158434c27813241
  partName ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.MultipartFormData.Part Data.Text.Internal.Text
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.Text.Internal.Text -> f Data.Text.Internal.Text)
                   (ds :: Network.HTTP.Client.MultipartFormData.Part) ->
                 case ds of wild { Network.HTTP.Client.MultipartFormData.Part x1 x2 x3 x4 x5 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.Text.Internal.Text
                   @ Network.HTTP.Client.MultipartFormData.Part
                   (\ (y1 :: Data.Text.Internal.Text) ->
                    Network.HTTP.Client.MultipartFormData.Part y1 x2 x3 x4 x5)
                   (f1 x1) }) -}
a24c1130eb47376407e5b7092e64f726
  proxy ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options
      (GHC.Base.Maybe Network.HTTP.Client.Types.Proxy)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Network.HTTP.Client.Types.Proxy
                          -> f (GHC.Base.Maybe Network.HTTP.Client.Types.Proxy))
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Network.HTTP.Client.Types.Proxy)
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: GHC.Base.Maybe Network.HTTP.Client.Types.Proxy) ->
                    Network.Wreq.Internal.Types.Options x1 y1 x3 x4 x5 x6 x7 x8)
                   (f1 x2) }) -}
7502c235c29205e05ffedf9f8f0ffa6b
  proxyHost ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Proxy Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.HTTP.Client.Types.Proxy) ->
                 case ds of wild { Network.HTTP.Client.Types.Proxy x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.HTTP.Client.Types.Proxy
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.HTTP.Client.Types.Proxy y1 x2)
                   (f1 x1) }) -}
cf179d2f955ac32fd9e7ee4043714cad
  proxyPort ::
    Control.Lens.Type.Lens'
      Network.HTTP.Client.Types.Proxy GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Int -> f GHC.Types.Int)
                   (ds :: Network.HTTP.Client.Types.Proxy) ->
                 case ds of wild { Network.HTTP.Client.Types.Proxy x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Int
                   @ Network.HTTP.Client.Types.Proxy
                   (\ (y1 :: GHC.Types.Int) -> Network.HTTP.Client.Types.Proxy x1 y1)
                   (f1 x2) }) -}
90f73cdd86c5941722cf741fc7c58f41
  redirects ::
    Control.Lens.Type.Lens'
      Network.Wreq.Internal.Types.Options GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Int -> f GHC.Types.Int)
                   (ds :: Network.Wreq.Internal.Types.Options) ->
                 case ds of wild { Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 x6 x7 x8 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Int
                   @ Network.Wreq.Internal.Types.Options
                   (\ (y1 :: GHC.Types.Int) ->
                    Network.Wreq.Internal.Types.Options x1 x2 x3 x4 x5 y1 x7 x8)
                   (f1 x6) }) -}
30eeafa1e1f279442d966dbd9dc1fee8
  responseBody ::
    Control.Lens.Type.Lens
      (Network.HTTP.Client.Types.Response body0)
      (Network.HTTP.Client.Types.Response body1)
      body0
      body1
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ body0
                   @ body1
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: body0 -> f body1)
                   (ds :: Network.HTTP.Client.Types.Response body0) ->
                 case ds of wild { Network.HTTP.Client.Types.Response x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ body1
                   @ (Network.HTTP.Client.Types.Response body1)
                   (\ (y1 :: body1) ->
                    Network.HTTP.Client.Types.Response @ body1 x1 x2 x3 y1 x5 x6)
                   (f1 x4) }) -}
b6a8265b15d3672ba0dd3cd658fa58f0
  responseClose' ::
    Control.Lens.Type.Lens'
      (Network.HTTP.Client.Types.Response body0)
      Network.HTTP.Client.Types.ResponseClose
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ body0
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Network.HTTP.Client.Types.ResponseClose
                          -> f Network.HTTP.Client.Types.ResponseClose)
                   (ds :: Network.HTTP.Client.Types.Response body0) ->
                 case ds of wild { Network.HTTP.Client.Types.Response x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Network.HTTP.Client.Types.ResponseClose
                   @ (Network.HTTP.Client.Types.Response body0)
                   (\ (y1 :: Network.HTTP.Client.Types.ResponseClose) ->
                    Network.HTTP.Client.Types.Response @ body0 x1 x2 x3 x4 x5 y1)
                   (f1 x6) }) -}
72ce1e1580c310b52fd8ce44acd25ec8
  responseCookie ::
    Data.ByteString.Internal.ByteString
    -> Control.Lens.Type.Fold
         (Network.HTTP.Client.Types.Response body)
         Network.HTTP.Client.Types.Cookie
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(U,U,U,U)><L,U(A,C(C1(U)))><L,U(U(U,U),U,A,1*U,A)><L,C(U)> -}
18a18fbf34f226b1ec2781343fecbae6
  responseCookieJar ::
    Control.Lens.Type.Lens'
      (Network.HTTP.Client.Types.Response body0)
      Network.HTTP.Client.Types.CookieJar
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ body0
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Network.HTTP.Client.Types.CookieJar
                          -> f Network.HTTP.Client.Types.CookieJar)
                   (ds :: Network.HTTP.Client.Types.Response body0) ->
                 case ds of wild { Network.HTTP.Client.Types.Response x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Network.HTTP.Client.Types.CookieJar
                   @ (Network.HTTP.Client.Types.Response body0)
                   (\ (y1 :: Network.HTTP.Client.Types.CookieJar) ->
                    Network.HTTP.Client.Types.Response @ body0 x1 x2 x3 x4 y1 x6)
                   (f1 x5) }) -}
6261d84fca005738f5ede03886ca0283
  responseHeader ::
    Network.HTTP.Types.Header.HeaderName
    -> Control.Lens.Type.Traversal'
         (Network.HTTP.Client.Types.Response body)
         Data.ByteString.Internal.ByteString
  {- Arity: 3, Strictness: <L,U><L,U(U(U,U),C(U),C(C1(U)),A,A)><L,U>,
     Unfolding: (\ @ body
                   (dk :: Network.HTTP.Types.Header.HeaderName)
                   @ (f :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative f)
                   (eta :: Data.ByteString.Internal.ByteString
                           -> f Data.ByteString.Internal.ByteString) ->
                 Network.Wreq.Lens.TH.responseHeaders
                   @ body
                   @ f
                   (GHC.Base.$p1Applicative @ f $dApplicative)
                   (Network.Wreq.Internal.Lens.assoc
                      @ Network.HTTP.Types.Header.HeaderName
                      @ Data.ByteString.Internal.ByteString
                      Network.HTTP.Client.Request.$s$fEq(,)_$s$fEqCI
                      dk
                      @ (->)
                      @ f
                      (Control.Lens.Internal.Indexed.$fIndexablei(->)
                         @ (Data.CaseInsensitive.Internal.CI
                              Data.ByteString.Internal.ByteString))
                      $dApplicative
                      eta)) -}
d917a80485771c37298535a9ff7940d7
  responseHeaders ::
    Control.Lens.Type.Lens'
      (Network.HTTP.Client.Types.Response body0)
      Network.HTTP.Types.Header.ResponseHeaders
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ body0
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Network.HTTP.Types.Header.ResponseHeaders
                          -> f Network.HTTP.Types.Header.ResponseHeaders)
                   (ds :: Network.HTTP.Client.Types.Response body0) ->
                 case ds of wild { Network.HTTP.Client.Types.Response x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Network.HTTP.Types.Header.ResponseHeaders
                   @ (Network.HTTP.Client.Types.Response body0)
                   (\ (y1 :: Network.HTTP.Types.Header.ResponseHeaders) ->
                    Network.HTTP.Client.Types.Response @ body0 x1 x2 y1 x4 x5 x6)
                   (f1 x3) }) -}
91f9e6683ed45eba53a6587caef3c66d
  responseLink ::
    Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Control.Lens.Type.Fold
         (Network.HTTP.Client.Types.Response body)
         Network.Wreq.Internal.Types.Link
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U)><L,U(U,U,U,U)><L,U(A,C(C1(U)))><L,U(U(U,U),U,C(C1(U)),1*U,A)><L,C(U)> -}
35081c82811837d6325f1a916d74004d
  responseStatus ::
    Control.Lens.Type.Lens'
      (Network.HTTP.Client.Types.Response body0)
      Network.HTTP.Types.Status.Status
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ body0
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Network.HTTP.Types.Status.Status
                          -> f Network.HTTP.Types.Status.Status)
                   (ds :: Network.HTTP.Client.Types.Response body0) ->
                 case ds of wild { Network.HTTP.Client.Types.Response x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Network.HTTP.Types.Status.Status
                   @ (Network.HTTP.Client.Types.Response body0)
                   (\ (y1 :: Network.HTTP.Types.Status.Status) ->
                    Network.HTTP.Client.Types.Response @ body0 y1 x2 x3 x4 x5 x6)
                   (f1 x1) }) -}
99109981b8399d021d6c321e32c9a2b1
  responseVersion ::
    Control.Lens.Type.Lens'
      (Network.HTTP.Client.Types.Response body0)
      Network.HTTP.Types.Version.HttpVersion
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ body0
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Network.HTTP.Types.Version.HttpVersion
                          -> f Network.HTTP.Types.Version.HttpVersion)
                   (ds :: Network.HTTP.Client.Types.Response body0) ->
                 case ds of wild { Network.HTTP.Client.Types.Response x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Network.HTTP.Types.Version.HttpVersion
                   @ (Network.HTTP.Client.Types.Response body0)
                   (\ (y1 :: Network.HTTP.Types.Version.HttpVersion) ->
                    Network.HTTP.Client.Types.Response @ body0 x1 y1 x3 x4 x5 x6)
                   (f1 x2) }) -}
53c7387b0d8c9b6910a04156a28881c4
  statusCode ::
    Control.Lens.Type.Lens'
      Network.HTTP.Types.Status.Status GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Int -> f GHC.Types.Int)
                   (ds :: Network.HTTP.Types.Status.Status) ->
                 case ds of wild { Network.HTTP.Types.Status.Status x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Int
                   @ Network.HTTP.Types.Status.Status
                   (\ (y1 :: GHC.Types.Int) -> Network.HTTP.Types.Status.Status y1 x2)
                   (f1 x1) }) -}
842ff24f2d91136cc7797c3092a111f0
  statusMessage ::
    Control.Lens.Type.Lens'
      Network.HTTP.Types.Status.Status
      Data.ByteString.Internal.ByteString
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.ByteString.Internal.ByteString
                          -> f Data.ByteString.Internal.ByteString)
                   (ds :: Network.HTTP.Types.Status.Status) ->
                 case ds of wild { Network.HTTP.Types.Status.Status x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Data.ByteString.Internal.ByteString
                   @ Network.HTTP.Types.Status.Status
                   (\ (y1 :: Data.ByteString.Internal.ByteString) ->
                    Network.HTTP.Types.Status.Status x1 y1)
                   (f1 x2) }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

